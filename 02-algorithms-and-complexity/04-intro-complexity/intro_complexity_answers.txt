1. Describe an analogy for relating an algorithm that has efficiency O(1) and
   another algorithm that has O(2^n).
      An algorithm that has O(1) is a Koenigsegg Agera and an algorithm that has
      O(2^n) is a Little Tikes Cozy Coupe.

2. In plain English, what is the best case scenario for binary search?
	   The best case is a constant time, resulting when the target is in the middle
     of the search.

3. In plain English, what is the worst-case scenario for binary search?
     The worst cast is when the target is in the deepest level of the tree,
     i.e. when the highest possible number of divisions must be made for a given
     collection.

4. In plain English, what is the bounded-case scenario for binary search?
     The bounded case is when the number of divisions made in the search more than the
     constant time (when the target is in the middle of the collection) and less than
     the worst case of the highest possible number of divisions for a given collection.

5. Create a graph using the data below. Here's a CSV with the values you'll need.
        see graph.png

6. What is the limit of the function above as n approaches infinity?
	       f(n) = 2^n

7. What is the Big-O of an algorithm that has the data points above?
	       O(2^n)

8. Write a Ruby method that takes a number n. This method must print the
   worst-case number of iterations for linear search to find an item in collections
   of size one to n. Use it to generate a table of worst-case iterations of
   collections up to size 10.
	     def find_worst_case(n)
		     puts n
	     end

9. Create a graph from the output using Google Sheets or other graphing software.
   Analyze the graph and denote its Big-O somewhere on the graph.
	     O(n)

10. What is the Big-O of binary search?02-algorithms-and-complexity
	     O(log n)

11. What is the Big-Ω of binary search?
	     O(1)

12. What is the Big-Ө of binary search?
	     O(log n)
